/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nave_espacial.vista;

import java.util.LinkedList;
import nave_espacial.modelo.Nebulosa;
import nave_espacial.modelo.Planeta;
import nave_espacial.modelo.SistemaPlanetario;

/**
 *
 * @author Danii
 */
public class EliminarRuta extends javax.swing.JDialog {

    private Nebulosa nebulosa;
    private SistemaPlanetario sPlanetario;

    public void definirParametro(Nebulosa nebulosa) {
        this.nebulosa = nebulosa;
        this.sPlanetario = null;
        cargarDatosComboboxOrigen();
    }

    public void definirParametro(SistemaPlanetario sPlanetario) {
        this.sPlanetario = sPlanetario;
        this.nebulosa = null;
        cargarDatosComboboxOrigen();
    }

    private void cargarDatosComboboxOrigen() {
        String[] listaDatos;
        if (nebulosa != null) {
            listaDatos = new String[nebulosa.getLista_sistemas_planetarios().size() + 1];
            listaDatos[0] = "";
            for (int i = 0; i < nebulosa.getLista_sistemas_planetarios().size(); i++) {
                listaDatos[i + 1] = nebulosa.getLista_sistemas_planetarios().get(i).getNombre();
            }
            this.comboBoxOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(listaDatos));
        } else if (sPlanetario != null) {
            listaDatos = new String[sPlanetario.getLista_planetas().size() + 1];
            listaDatos[0] = "";
            for (int i = 0; i < sPlanetario.getLista_planetas().size(); i++) {
                listaDatos[i + 1] = sPlanetario.getLista_planetas().get(i).getNombre();
            }
            this.comboBoxOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(listaDatos));
        }
    }

    private void resetComboBox() {
        cargarDatosComboboxOrigen();
        this.ComboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));
    }

    private void cargarDatosComboboxDestino(String origen) {
        String[] listaDatos;
        if (nebulosa != null) {
            listaDatos = obtenerDestinosRutaNebulosa(origen);
            this.ComboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(listaDatos));
        } else if (sPlanetario != null) {
            listaDatos = obtenerDestinosRutaSP(origen);
            this.ComboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(listaDatos));
        }
    }

    private String[] obtenerDestinosRutaNebulosa(String origen) {
        int indiceOrigen = obtenerIndice(origen);
        LinkedList<SistemaPlanetario> listaSPlanetas = new LinkedList<>();
        for (int i = 0; i < nebulosa.getCostos_rutas().get(indiceOrigen).size(); i++) {
            if (nebulosa.getCostos_rutas().get(indiceOrigen).get(i) != -1) {
                listaSPlanetas.add(nebulosa.getLista_sistemas_planetarios().get(i));
            }
        }
        String[] destinos = new String[listaSPlanetas.size()];
        for (int i = 0; i < listaSPlanetas.size(); i++) {
            destinos[i] = listaSPlanetas.get(i).getNombre();
        }
        return destinos;
    }

    private String[] obtenerDestinosRutaSP(String origen) {
        int indiceOrigen = obtenerIndice(origen);
        LinkedList<Planeta> listaPlanetas = new LinkedList<>();
        for (int i = 0; i < sPlanetario.getRutas_planetas().get(indiceOrigen).size(); i++) {
            if (sPlanetario.getRutas_planetas().get(indiceOrigen).get(i) != 0) {
                listaPlanetas.add(sPlanetario.getLista_planetas().get(i));
            }
        }
        String[] destinos = new String[listaPlanetas.size()];
        for (int i = 0; i < listaPlanetas.size(); i++) {
            destinos[i] = listaPlanetas.get(i).getNombre();
        }
        return destinos;
    }

    private Integer obtenerIndice(String origen) {
        if (nebulosa != null) {
            for (int i = 0; i < nebulosa.getLista_sistemas_planetarios().size(); i++) {
                if (nebulosa.getLista_sistemas_planetarios().get(i).getNombre().equalsIgnoreCase(origen)) {
                    return i;
                }
            }
        } else {
            for (int i = 0; i < sPlanetario.getLista_planetas().size(); i++) {
                if (sPlanetario.getLista_planetas().get(i).getNombre().equalsIgnoreCase(origen)) {
                    return i;
                }
            }
        }
        return null;
    }

    /**
     * Creates new form EliminarRuta
     */
    public EliminarRuta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboBoxOrigen = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ComboBoxDestino = new javax.swing.JComboBox<>();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Eliminar rutas");

        comboBoxOrigen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxOrigenItemStateChanged(evt);
            }
        });

        jLabel2.setText("Origen:");

        jLabel3.setText("Destino:");

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboBoxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ComboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(btnEliminar)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxOrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxOrigenItemStateChanged
        if (evt.getStateChange() == 1) {
            cargarDatosComboboxDestino(evt.getItem().toString());
        }
    }//GEN-LAST:event_comboBoxOrigenItemStateChanged

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            Integer indiceOrigen = obtenerIndice(this.comboBoxOrigen.getSelectedItem().toString());
            Integer indiceDestino = obtenerIndice(this.ComboBoxDestino.getSelectedItem().toString());
            if (nebulosa != null && indiceOrigen != null && indiceDestino != null) {
                this.nebulosa.getCostos_rutas().get(indiceOrigen).set(indiceDestino, -1);
                this.nebulosa.getCostos_rutas().get(indiceDestino).set(indiceOrigen, -1);
            } else {
                this.sPlanetario.getRutas_planetas().get(indiceOrigen).set(indiceDestino, 0);
                this.sPlanetario.getRutas_planetas().get(indiceDestino).set(indiceOrigen, 0);
            }
            resetComboBox();
        } catch (Exception e) {
            ///No importa el error que sale
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EliminarRuta dialog = new EliminarRuta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxDestino;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> comboBoxOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
